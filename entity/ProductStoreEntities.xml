<?xml version="1.0" encoding="UTF-8"?>
<!--
This software is in the public domain under CC0 1.0 Universal plus a 
Grant of Patent License.

To the extent possible under law, the author(s) have dedicated all
copyright and related and neighboring rights to this software to the
public domain worldwide. This software is distributed without any
warranty.

You should have received a copy of the CC0 Public Domain Dedication
along with this software (see the LICENSE.md file). If not, see
<http://creativecommons.org/publicdomain/zero/1.0/>.
-->
<entities xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/entity-definition-2.1.xsd">
    <!-- ========================================================= -->
    <!--  - mantle.product.store -->
    <!-- ========================================================= -->

    <entity entity-name="ProductStore" package="mantle.product.store" short-alias="productStores" cache="true">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="storeName" type="text-medium"/>
        <field name="organizationPartyId" type="id">
            <description>The Organization Party that Orders, Invoices, GL transactions, etc will be associated with.</description></field>
        <field name="inventoryFacilityId" type="id"/>
        <field name="reservationOrderEnumId" type="id"/>
        <field name="reservationAutoEnumId" type="id"/>
        <field name="requireInventory" type="text-indicator"/>
        <field name="returnPostalContactMechId" type="id"><description>Return postal address for shipping labels</description></field>

        <field name="storeDomain" type="text-short"><description>Store domain for use in emails</description></field>
        <field name="profileUrlPath" type="text-medium"><description>Path to profile page for use in emails</description></field>
        <field name="wikiSpaceId" type="id"><description>For a WikiSpace mounted as content, superceded by ProductStoreWikiSpace entity</description></field>

        <field name="defaultLocale" type="text-short"/>
        <field name="defaultCurrencyUomId" type="id"/>
        <field name="defaultSalesChannelEnumId" type="id"/>

        <field name="requireCustomerRole" type="text-indicator"/>
        <field name="taxGatewayConfigId" type="id"/>
        <field name="systemMessageRemoteId" type="id"><description>
            Reference to the SystemMessageRemote record for the remote system this store is for such as a separate, integrated ecommerce app.
            Note that SystemMessageRemote is extended with a productStoreId so that other SystemMessageRemotes know which store they are for (if applicable).
        </description></field>

        <relationship type="one" title="Organization" related="mantle.party.Party" short-alias="organization">
            <key-map field-name="organizationPartyId"/></relationship>
        <relationship type="one" title="Inventory" related="mantle.facility.Facility" short-alias="inventoryFacility">
            <key-map field-name="inventoryFacilityId"/></relationship>
        <relationship type="one" title="AssetReservationOrder" related="moqui.basic.Enumeration" short-alias="assetReservationOrder">
            <key-map field-name="reservationOrderEnumId"/></relationship>
        <relationship type="one" title="AssetReservationAuto" related="moqui.basic.Enumeration" short-alias="reservationAutoEnum">
            <key-map field-name="reservationAutoEnumId"/></relationship>
        <relationship type="one-nofk" title="Return" related="mantle.party.contact.ContactMech" short-alias="returnPostal">
            <key-map field-name="returnPostalContactMechId"/></relationship>
        <relationship type="one" title="Return" related="mantle.party.contact.PostalAddress" short-alias="returnPostalAddress">
            <key-map field-name="returnPostalContactMechId"/></relationship>

        <relationship type="one" related="moqui.resource.wiki.WikiSpace" short-alias="wikiSpace"/>
        <relationship type="one" title="DefaultCurrency" related="moqui.basic.Uom" short-alias="defaultCurrencyUom">
            <key-map field-name="defaultCurrencyUomId"/></relationship>
        <relationship type="one" title="DefaultSalesChannel" related="moqui.basic.Enumeration" short-alias="defaultSalesChannel">
            <key-map field-name="defaultSalesChannelEnumId"/></relationship>
        <relationship type="one" related="mantle.other.tax.TaxGatewayConfig" short-alias="taxGatewayConfig"/>
        <relationship type="one" related="moqui.service.message.SystemMessageRemote" short-alias="remote"/>

        <relationship type="many" related="mantle.product.store.ProductStoreCategory" short-alias="categories">
            <key-map field-name="productStoreId"/></relationship>
        <relationship type="many" related="mantle.product.store.ProductStoreEmail" short-alias="emails">
            <key-map field-name="productStoreId"/></relationship>
        <relationship type="many" related="mantle.product.store.ProductStoreFacility" short-alias="facilities">
            <key-map field-name="productStoreId"/></relationship>
        <relationship type="many" related="mantle.product.store.ProductStoreParty" short-alias="parties">
            <key-map field-name="productStoreId"/></relationship>
        <relationship type="many" related="mantle.product.store.ProductStorePaymentGateway" short-alias="paymentGateways">
            <key-map field-name="productStoreId"/></relationship>
        <relationship type="many" related="mantle.product.store.ProductStoreSetting" short-alias="settings">
            <key-map field-name="productStoreId"/></relationship>
        <relationship type="many" related="mantle.product.store.ProductStoreShippingGateway" short-alias="shippingGateways">
            <key-map field-name="productStoreId"/></relationship>
        <relationship type="many" related="mantle.product.store.ProductStoreShipOption" short-alias="shipOptions">
            <key-map field-name="productStoreId"/></relationship>
        <relationship type="many" related="mantle.product.store.ProductStoreGroupMember" short-alias="groups">
            <key-map field-name="productStoreId"/></relationship>

        <seed-data>
            <!-- Asset (Inventory) Reservation Order -->
            <moqui.basic.EnumerationType description="Asset (Inventory) Reservation Order" enumTypeId="AssetReservationOrder"/>
            <!-- for these records enumCode is the order by field (on mantle.product.asset.Asset), makes it easy to add new ones -->
            <moqui.basic.Enumeration description="FIFO Receive" enumId="AsResOrdFifoRec" enumCode="receivedDate" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="LIFO Receive" enumId="AsResOrdLifoRec" enumCode="-receivedDate" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="FIFO Expire" enumId="AsResOrdFifoExp" enumCode="expectedEndOfLife" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="LIFO Expire" enumId="AsResOrdLifoExp" enumCode="-expectedEndOfLife" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="Greatest Unit Cost" enumId="AsResOrdCostGr" enumCode="-acquireCost" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="Lowest Unit Cost" enumId="AsResOrdCostLw" enumCode="acquireCost" enumTypeId="AssetReservationOrder"/>
            <moqui.basic.Enumeration description="No Reservation" enumId="AsResOrdNoRes" enumTypeId="AssetReservationOrder"/>

            <!-- Asset (Inventory) Auto Reservation Trigger -->
            <moqui.basic.EnumerationType description="Asset Auto Reservation" enumTypeId="AssetReservationAuto"/>
            <moqui.basic.Enumeration description="No Auto Reserve" enumId="AsResAutoNone" enumTypeId="AssetReservationAuto"/>
            <moqui.basic.Enumeration description="On Order Placed" enumId="AsResAutoPlaced" enumTypeId="AssetReservationAuto"/>
            <moqui.basic.Enumeration description="On Order Approved" enumId="AsResAutoApproved" enumTypeId="AssetReservationAuto"/>
        </seed-data>
        <master>
            <detail relationship="organization"/>
            <detail relationship="inventoryFacility"/>
            <detail relationship="assetReservationOrder"/>
            <detail relationship="defaultCurrencyUom"/>
            <detail relationship="defaultSalesChannel"/>
            <detail relationship="taxGatewayConfig"/>

            <detail relationship="categories"><detail relationship="category"/><detail relationship="type"/></detail>
            <detail relationship="emails"><detail relationship="template"/><detail relationship="type"/></detail>
            <detail relationship="facilities"><detail relationship="facility"/></detail>
            <detail relationship="parties"><detail relationship="party" use-master="basic"/>
                <detail relationship="role"/></detail>
            <detail relationship="paymentGateways"><detail relationship="paymentInstrument"/>
                <detail relationship="config"/></detail>
            <detail relationship="shippingGateways"><detail relationship="carrier" use-master="basic"/>
                <detail relationship="config"/></detail>
            <detail relationship="groups"><detail relationship="group"/></detail>
        </master>
    </entity>
    <extend-entity entity-name="SystemMessageRemote" package="moqui.service.message">
        <field name="productStoreId" type="id"/>
        <relationship type="one" related="mantle.product.store.ProductStore"/>
    </extend-entity>

    <entity entity-name="ProductStoreCategory" package="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="productCategoryId" type="id" is-pk="true"/>
        <field name="storeCategoryTypeEnumId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" related="mantle.product.category.ProductCategory" short-alias="category"/>
        <relationship type="one" title="ProductStoreCategoryType" related="moqui.basic.Enumeration" short-alias="type">
            <key-map field-name="storeCategoryTypeEnumId"/></relationship>
        <seed-data>
            <!-- Product Store Category Type -->
            <moqui.basic.EnumerationType description="Product Store Category Type" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Home Page (One)" enumId="PsctHomePage" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Browse Root (One)" enumId="PsctBrowseRoot" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Default Search (One)" enumId="PsctSearch" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Quick Add (Many)" enumId="PsctQuickAdd" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Quick Add Internal (Many)" enumId="PsctQuickInternal" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Promotions (One)" enumId="PsctPromotions" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="New Products (One)" enumId="PsctNewProducts" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Featured (One)" enumId="PsctFeatured" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="View Allow (One)" enumId="PsctViewAllow" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Purchase Allow (One)" enumId="PsctPurchaseAllow" enumTypeId="ProductStoreCategoryType"/>
            <moqui.basic.Enumeration description="Admin Allow (One)" enumId="PsctAdminAllow" enumTypeId="ProductStoreCategoryType"/>
        </seed-data>
    </entity>
    <entity entity-name="ProductStoreEmail" package="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="emailTypeEnumId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="emailTemplateId" type="id"/>
        <field name="headerImagePath" type="text-medium"/>
        <field name="detailLinkPath" type="text-medium"/>
        <field name="webOrderBcc" type="text-medium"/>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" title="ProductStoreEmailType" related="moqui.basic.Enumeration" short-alias="type">
            <key-map field-name="emailTypeEnumId"/></relationship>
        <relationship type="one" related="moqui.basic.email.EmailTemplate" short-alias="template"/>
        <seed-data>
            <!-- Product Store Email Type -->
            <moqui.basic.EnumerationType description="Product Store Email Notification Type" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Registration" enumId="PsetRegistration" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Order Quote Requested" enumId="PsetOrderRequested" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Order Quote Proposed" enumId="PsetOrderProposed" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Order Placed" enumId="PsetOrderPlaced" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Order Approved" enumId="PsetOrderApproved" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Order Complete" enumId="PsetOrderComplete" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Order Change" enumId="PsetOrderChange" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Back-Order Notice" enumId="PsetBackOrder" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Payment Retry" enumId="PsetPaymentRetry" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Return Accepted" enumId="PsetReturnAccepted" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Return Completed" enumId="PsetReturnCompleted" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Return Cancelled" enumId="PsetReturnCancelled" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Reset Password" enumId="PsetResetPassword" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Tell-A-Friend" enumId="PsetTellAFriend" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Gift Card Purchase" enumId="PsetGiftCardPurchase" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Gift Card Reload" enumId="PsetGiftCardReload" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Shipment Shipped" enumId="PsetShipmentShipped" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Shipment Delivered" enumId="PsetShipmentDelivered" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Invoice Finalized" enumId="PsetInvoiceFinalized" enumTypeId="ProductStoreEmailType"/>
            <moqui.basic.Enumeration description="Invoices Past Due" enumId="PsetInvoicesPastDue" enumTypeId="ProductStoreEmailType"/>
        </seed-data>
    </entity>
    <entity entity-name="ProductStoreFacility" package="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="facilityId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" related="mantle.facility.Facility" short-alias="facility"/>
    </entity>
    <entity entity-name="ProductStoreParty" package="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="partyId" type="id" is-pk="true"/>
        <field name="roleTypeId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" related="mantle.party.Party" short-alias="party"/>
        <relationship type="one" related="mantle.party.RoleType" short-alias="role"/>
    </entity>
    <entity entity-name="ProductStorePaymentGateway" package="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="paymentInstrumentEnumId" type="id" is-pk="true"/>
        <field name="paymentGatewayConfigId" type="id"/>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" title="PaymentInstrument" related="moqui.basic.Enumeration" short-alias="paymentInstrument">
            <key-map field-name="paymentInstrumentEnumId"/></relationship>
        <relationship type="one" related="mantle.account.method.PaymentGatewayConfig" short-alias="config"/>
    </entity>

    <entity entity-name="ProductStoreProduct" package="mantle.product.store" use="configuration" cache="true">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="productId" type="id" is-pk="true"/>
        <field name="signatureRequiredEnumId" type="id"/>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" related="mantle.product.Product" short-alias="product"/>
        <relationship type="one" title="SignatureRequired" related="moqui.basic.Enumeration" short-alias="signatureRequiredEnum">
            <key-map field-name="signatureRequiredEnumId"/></relationship>
    </entity>

    <entity entity-name="ProductStorePromotion" package="mantle.product.store" use="configuration" cache="true">
        <field name="storePromotionId" type="id" is-pk="true"/>
        <field name="productStoreId" type="id"/>
        <field name="itemDescription" type="text-medium"><description>Description for the OrderItem (itemDescription), promo service
            should run this through ResourceFacade.expand() with parameters depending on the promo service</description></field>
        <field name="serviceRegisterId" type="id" not-null="true"><description>Registered Service of type ProductStorePromotion that implements the
            mantle.product.StoreServices.apply#Promotion interface</description></field>
        <field name="fromDate" type="date-time"/>
        <field name="thruDate" type="date-time"/>
        <field name="sequenceNum" type="number-integer"/>
        <field name="requireCode" type="text-indicator"/>
        <field name="useLimitPerOrder" type="number-integer"/>
        <field name="useLimitPerCustomer" type="number-integer"/>
        <field name="useLimitPerPromotion" type="number-integer"/>
        <field name="freeGroundShipping" type="text-indicator"/>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" related="moqui.service.ServiceRegister" short-alias="serviceRegister"/>
        <relationship type="many" related="mantle.product.store.ProductStorePromoParameter" short-alias="parameters">
            <key-map field-name="storePromotionId"/></relationship>
        <relationship type="many" related="mantle.product.store.ProductStorePromoCode" short-alias="codes">
            <key-map field-name="storePromotionId"/></relationship>
        <seed-data><moqui.basic.Enumeration description="Product Store Promotion" enumId="ProductStorePromotion" enumTypeId="ServiceRegisterType"/></seed-data>
    </entity>
    <entity entity-name="ProductStorePromoParameter" package="mantle.product.store" use="configuration" cache="true">
        <field name="storePromotionId" type="id" is-pk="true"/>
        <field name="parameterName" type="text-short" is-pk="true"/>
        <field name="parameterValue" type="text-medium"/>
        <relationship type="one" related="mantle.product.store.ProductStorePromotion" short-alias="storePromotion"/>
    </entity>
    <entity entity-name="ProductStorePromoProduct" package="mantle.product.store" use="configuration" cache="true">
        <field name="storePromotionId" type="id" is-pk="true"/>
        <field name="productId" type="id" is-pk="true"/>
        <relationship type="one" related="mantle.product.store.ProductStorePromotion" short-alias="storePromotion"/>
        <relationship type="one" related="mantle.product.Product" short-alias="product"/>
    </entity>
    <entity entity-name="ProductStorePromoCode" package="mantle.product.store">
        <field name="promoCodeId" type="id" is-pk="true"/>
        <field name="promoCode" type="text-short" default="promoCodeId"/>
        <field name="storePromotionId" type="id"/>
        <field name="fromDate" type="date-time"/>
        <field name="thruDate" type="date-time"/>
        <field name="useLimitPerCode" type="number-integer"/>
        <field name="useLimitPerCustomer" type="number-integer"/>
        <field name="userEntered" type="text-indicator"/>
        <field name="requireParty" type="text-indicator"/>
        <relationship type="one" related="mantle.product.store.ProductStorePromotion" short-alias="storePromotion"/>
        <relationship type="many" related="mantle.product.store.ProductStorePromoCodeParty" short-alias="parties">
            <key-map field-name="storePromotionId"/></relationship>
        <index name="PSTR_PROMO_CODE" unique="true"><index-field name="promoCode"/></index>
    </entity>
    <entity entity-name="ProductStorePromoCodeParty" package="mantle.product.store">
        <field name="promoCodeId" type="id" is-pk="true"/>
        <field name="partyId" type="id" is-pk="true"/>
        <relationship type="one" related="mantle.product.store.ProductStorePromoCode" short-alias="storePromoCode"/>
        <relationship type="one" related="mantle.party.Party" short-alias="party"/>
    </entity>

    <entity entity-name="ProductStoreSetting" package="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="settingTypeEnumId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="settingValue" type="text-medium"/>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" title="ProductStoreSettingType" related="moqui.basic.Enumeration" short-alias="type">
            <key-map field-name="settingTypeEnumId"/></relationship>
        <seed-data>
            <moqui.basic.EnumerationType description="Product Store Setting Type" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration enumCode="restApiLocation" description="REST API Location" enumId="PsstRestApiLocation" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration enumCode="contentLocation" description="Content Location" enumId="PsstContentLocation" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration enumCode="contentAttachmentLocation" description="Content Attachment Location" enumId="PsstContentAttachmentLoc" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration enumCode="productImageLocation" description="Product Image Location" enumId="PsstProductImageLoc" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration enumCode="getReturnLabels" description="Get Return Labels (true/false)" enumId="PsstGetReturnLabels" enumTypeId="ProductStoreSettingType"/>

            <moqui.basic.Enumeration description="Ship Label From Name" enumId="PsstShipLabelName" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Ship Label From Company" enumId="PsstShipLabelCompany" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Ship Restrict Carriers (true/false)" enumId="PsstShipRestrictCarriers" enumTypeId="ProductStoreSettingType"/>

            <moqui.basic.Enumeration description="Template Location Shipment Insert" enumId="PsstTemplateShipmentInsert" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Template Location Shipment Pick Sheet" enumId="PsstTemplateShipmentPick" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Template Location Shipment Pack Sheet" enumId="PsstTemplateShipmentPack" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Template Location Shipment By Package" enumId="PsstTemplateShipmentByPackage" enumTypeId="ProductStoreSettingType"/>

            <moqui.basic.Enumeration description="Template Location Invoice Print" enumId="PsstTemplateInvoicePrint" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Template Location Order Print" enumId="PsstTemplateOrderPrint" enumTypeId="ProductStoreSettingType"/>

            <moqui.basic.Enumeration description="Order Approve Warn New Customer (false to disable)" enumId="PsstOrdApproveNewCust" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Order Approve Warn Address not Valid (false to disable)" enumId="PsstOrdApproveAddrNotValid" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Order Approve Warn Address Missing (false to disable)" enumId="PsstOrdApproveAddrMissing" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Order Approve Warn Std Devs Over Avg Total (default 3.0, 0 to disable)" enumId="PsstOrdApproveStdDevTotal" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Order Approve Warn Std Devs Over Avg Product Qty (default 3.0, 0 to disable)" enumId="PsstOrdApproveStdDevProdQty" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Order Approve Warn Inventory Not Available (false to disable)" enumId="PsstOrdApproveInventoryNotAvail" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Order Approve Warn Percent Available Inventory (default 20, 0 to disable)" enumId="PsstOrdApprovePercAvailInv" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Order Approve Warn Similar within 24hrs (false to disable)" enumId="PsstOrdApproveSimilar" enumTypeId="ProductStoreSettingType"/>
            <moqui.basic.Enumeration description="Order Approve Warn Price Min/Max (false to disable)" enumId="PsstOrdApprovePriceMinMax" enumTypeId="ProductStoreSettingType"/>
        </seed-data>
    </entity>

    <entity entity-name="ProductStoreShippingGateway" package="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="carrierPartyId" type="id" is-pk="true"/>
        <field name="shippingGatewayConfigId" type="id"/>
        <field name="billingType" type="text-short"><description>For third party and other carrier account billing;
            for Shippo valid values are SENDER, RECIPIENT, THIRD_PARTY</description></field>
        <field name="billingAccount" type="text-short"><description>Third party or other carrier account number</description></field>
        <field name="billingZip" type="text-short"/>
        <field name="billingCountry" type="text-short"><description>For Shippo this is the 2 letter ISO country code</description></field>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" title="Carrier" related="mantle.party.Party" short-alias="carrier">
            <key-map field-name="carrierPartyId"/></relationship>
        <relationship type="one" related="mantle.shipment.carrier.ShippingGatewayConfig" short-alias="config"/>
    </entity>
    <entity entity-name="ProductStoreShipOption" package="mantle.product.store">
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="carrierPartyId" type="id" is-pk="true"/>
        <field name="shipmentMethodEnumId" type="id" is-pk="true"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" title="Carrier" related="mantle.party.Party" short-alias="carrier">
            <key-map field-name="carrierPartyId"/></relationship>
        <relationship type="one" title="ShipmentMethod" related="moqui.basic.Enumeration" short-alias="shipmentMethodEnum">
            <key-map field-name="shipmentMethodEnumId"/></relationship>
    </entity>

    <entity entity-name="ProductStoreWikiSpace" package="mantle.product.store">
        <description>Used to configure a WikiSpace to use for a given store, space type, and locale instead of directly referencing a wikiSpaceId.</description>
        <field name="storeWikiSpaceId" type="id" is-pk="true"/>
        <field name="productStoreId" type="id"/>
        <field name="spaceTypeEnumId" type="id"/>
        <field name="locale" type="text-short"/>
        <field name="fromDate" type="date-time"/>
        <field name="thruDate" type="date-time"/>
        <field name="wikiSpaceId" type="id"/>
        <!-- future: <field name="allowSplit" type="text-indicator"><description>If all matching records have a 'Y' randomize and remember the
            wikiSpaceId used instead of using from/thru date pattern (filter, get most recent by fromDate) to determine a single space.</description></field> -->
        <!-- future, for version tagging once implemented: <field name="spaceTag" type="text-short"/> -->
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" title="ProductStoreWikiSpaceType" related="moqui.basic.Enumeration" short-alias="type">
            <key-map field-name="spaceTypeEnumId"/></relationship>
        <relationship type="one" related="moqui.resource.wiki.WikiSpace" short-alias="wikiSpace"/>
        <seed-data>
            <!-- NOTE: these enumId values go in URLs to keep small -->
            <moqui.basic.EnumerationType description="Product Store Wiki Space Type" enumTypeId="ProductStoreWikiSpaceType"/>
            <!-- full page content like about us, policies, etc -->
            <moqui.basic.Enumeration description="Content - Full Page" enumId="PstFull" enumTypeId="ProductStoreWikiSpaceType"/>
            <!-- page snippet content including banners, carousel slides, etc; often referred to through a WikiPageCategory -->
            <moqui.basic.Enumeration description="Content - Snippet" enumId="PstSnip" enumTypeId="ProductStoreWikiSpaceType"/>
            <!-- templates for information pages like header, footer, home, category, product, search, etc; server rendered, change frequently -->
            <moqui.basic.Enumeration description="Template - Information (home, product, etc)" enumId="PstTmpSrv" enumTypeId="ProductStoreWikiSpaceType"/>
            <!-- templates for interactive pages like checkout, profile, etc; client rendered, change less frequently -->
            <moqui.basic.Enumeration description="Template - Interactive (checkout, profile, etc)" enumId="PstTmpClt" enumTypeId="ProductStoreWikiSpaceType"/>
        </seed-data>
    </entity>
    <entity entity-name="ProductStoreWikiContent" package="mantle.product.store">
        <description>Used to configure the wiki space type and page path given a store content type.
            An alternative to directly specifying the spaceTypeEnumId (for ProductStoreWikiSpace) and pagePath for lookup within the WikiSpace.</description>
        <field name="storeWikiContentId" type="id" is-pk="true"/>
        <field name="productStoreId" type="id"/>
        <field name="contentTypeEnumId" type="id"/>
        <!-- maybe at this level... <field name="locale" type="text-short"/> -->
        <field name="fromDate" type="date-time"/>
        <field name="thruDate" type="date-time"/>
        <field name="spaceTypeEnumId" type="id"/>
        <field name="pagePath" type="text-medium"/>
        <!-- future: <field name="allowSplit" type="text-indicator"><description>If all matching records have a 'Y' randomize and remember the
            wikiSpaceId used instead of using from/thru date pattern (filter, get most recent by fromDate) to determine a single space.</description></field> -->
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" title="ProductStoreContentType" related="moqui.basic.Enumeration" short-alias="type">
            <key-map field-name="contentTypeEnumId"/></relationship>
        <relationship type="one" title="ProductStoreWikiSpaceType" related="moqui.basic.Enumeration" short-alias="type">
            <key-map field-name="spaceTypeEnumId"/></relationship>
        <seed-data>
            <moqui.basic.EnumerationType description="Product Store Content Type" enumTypeId="ProductStoreContentType"/>

            <moqui.basic.Enumeration enumCode="template_client_header" description="Header Template - Client" enumId="PsctHeaderTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_footer" description="Footer Template - Client" enumId="PsctFooterTemplate" enumTypeId="ProductStoreContentType"/>

            <moqui.basic.Enumeration enumCode="template_client_home" description="Home Template - Client" enumId="PsctHomeTemplate" enumTypeId="ProductStoreContentType"/>

            <moqui.basic.Enumeration enumCode="template_client_search" description="Search Template - Client" enumId="PsctSearchTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_category" description="Category Template - Client" enumId="PsctCategoryTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_product" description="Product Template - Client" enumId="PsctProductTemplate" enumTypeId="ProductStoreContentType"/>
            <!-- consolidate these
            <moqui.basic.Enumeration enumCode="template_client_categoryProduct" description="Category Product Template - Client" enumId="PsctCategoryProductTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_productImage" description="Product Image Template - Client" enumId="PsctProductImageTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_productReview" description="Product Review Template - Client" enumId="PsctProductReviewTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_starRating" description="Star Rating Template - Client" enumId="PsctProductTemplate" enumTypeId="ProductStoreContentType"/>
            -->

            <moqui.basic.Enumeration enumCode="template_client_login" description="Login Template - Client" enumId="PsctLoginTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_resetPassword" description="Reset Password Template - Client" enumId="PsctResetPasswordTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_account" description="Account Template - Client" enumId="PsctAccountTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_accountCreate" description="Account Create Template - Client" enumId="PsctAccountCreateTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_orderHistory" description="Order History Template - Client" enumId="PsctOrderHistoryTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_orderDetail" description="Order Detail Template - Client" enumId="PsctOrderDetailTemplate" enumTypeId="ProductStoreContentType"/>

            <moqui.basic.Enumeration enumCode="template_client_checkout" description="Checkout Template - Client" enumId="PsctCheckoutTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_checkoutHeader" description="Checkout Header Template - Client" enumId="PsctCheckoutHeaderTemplate" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_client_checkoutSuccess" description="Checkout Success Template - Client" enumId="PsctCheckoutSuccessTemplate" enumTypeId="ProductStoreContentType"/>

            <moqui.basic.Enumeration enumCode="template_server_root" description="Root Template - Server" enumId="PsctRootTemplateServer" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_server_header" description="Header Template - Server" enumId="PsctHeaderTemplateServer" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_server_footer" description="Footer Template - Server" enumId="PsctFooterTemplateServer" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_server_home" description="Home Template - Server" enumId="PsctHomeTemplateServer" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_server_category" description="Category Template - Server" enumId="PsctCategoryTemplateServer" enumTypeId="ProductStoreContentType"/>
            <moqui.basic.Enumeration enumCode="template_server_product" description="Product Template - Server" enumId="PsctProductTemplateServer" enumTypeId="ProductStoreContentType"/>
        </seed-data>
    </entity>

    <entity entity-name="ProductStoreGroup" package="mantle.product.store">
        <field name="productStoreGroupId" type="id" is-pk="true"/>
        <field name="storeGroupTypeEnumId" type="id"/>
        <field name="description" type="text-medium"/>
        <relationship type="one" title="ProductStoreGroupType" related="moqui.basic.Enumeration">
            <key-map field-name="storeGroupTypeEnumId"/></relationship>
    </entity>
    <entity entity-name="ProductStoreGroupMember" package="mantle.product.store">
        <field name="productStoreGroupId" type="id" is-pk="true"/>
        <field name="productStoreId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <field name="sequenceNum" type="number-integer"/>
        <relationship type="one" related="mantle.product.store.ProductStore" short-alias="store"/>
        <relationship type="one" related="mantle.product.store.ProductStoreGroup" short-alias="group"/>
    </entity>
    <entity entity-name="ProductStoreGroupParty" package="mantle.product.store">
        <field name="productStoreGroupId" type="id" is-pk="true"/>
        <field name="partyId" type="id" is-pk="true"/>
        <field name="roleTypeId" type="id" is-pk="true"/>
        <field name="fromDate" type="date-time" is-pk="true"/>
        <field name="thruDate" type="date-time"/>
        <relationship type="one" related="mantle.product.store.ProductStoreGroup"/>
        <relationship type="one" related="mantle.party.Party"/>
        <relationship type="one" related="mantle.party.RoleType"/>
    </entity>
</entities>
